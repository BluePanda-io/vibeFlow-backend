module.exports = `
    
    
    
    type Members {
        _id: ID
        
        discordName: String
        discordAvatar: String
        discriminator: String
        bio: String

        hoursPerWeek: Float,



        tweets: [String],
        skills: [Skills],
        projects: [projectMemberType],
        archiveProjects: [String],
        network: [Members],

        registeredAt: String,

        previusProjects: [previusProjectsType],

        attributes: attributesType,


    }

    type attributesType {
        Director: Int,
        Motivator: Int,
        Inspirer: Int,
        Helper: Int,
        Supporter: Int,
        Coordinator: Int,
        Observer: Int,
        Reformer: Int,
    }

    type previusProjectsType {
        title: String,
        description: String,
        link: String,
        picture: String,
        startDate: String,
        endDate: String,
    }

    type projectMemberType {
        info: Project,
        role: roleType,
        champion: Boolean,
        phase: phaseType,
        favorite: Boolean,
    }
    

    type skillsType {
        id: String,
        authors: [Members],
        points: Float,
    }

    type matchMembersToUserOutput {
        matchPercentage: Float,
        member: Members,
        commonSkills: [Skills]
    }

    type matchMembersToSkillOutput {
        matchPercentage: Float,
        member: Members,
        commonSkills: [Skills]
    }


   
    



    input findMemberInput {
        _id: ID
    }

    input findMembersInput {
        _id: [ID]
    }
    input matchMembersToUserInput {
        memberID: ID
    }
    input matchMembersToSkillInput {
        skillsID: [ID]
    }

    input addNewMemberInput {
        _id: ID
        discordName: String
        discordAvatar: String
        discriminator: String
        bio: String

        hoursPerWeek: Float,

        previusProjects: [previusProjectsInput],

    }


    input updateMemberInput {
        _id: ID
        discordName: String
        discordAvatar: String
        discriminator: String
        bio: String

        hoursPerWeek: Float,

        previusProjects: [previusProjectsInput],

    }

    input addFavoriteProjectInput {
        memberID: ID
        projectID: ID
        favorite: Boolean
    }

    input endorseAttributeInput {
        _id: ID
        attribute: attributesEnum

    }

    enum attributesEnum {
        Director
        Motivator
        Inspirer
        Helper
        Supporter
        Coordinator
        Observer
        Reformer
    }

     input previusProjectsInput {
        title: String,
        description: String,
        link: String,
        picture: String,
        startDate: String,
        endDate: String,
    }

    input networkInput {
        memberID: ID
        endorcment: [endorcmentInput]
    }

    input endorcmentInput {
        skillID: ID
        registeredAt: String
    }

    input skillsUpdateMemberInput {
        skillID: ID
        authors: String
        communityLevel: Float
        selfEndorsedLevel: Float
    }


    input addSkillToMember_Input {
        skillID: ID
        memberID: ID
        authorID: ID
    }

    

`