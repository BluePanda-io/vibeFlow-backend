module.exports = `
    
    type Node {
        _id: ID
        name: String
        node: String
        
        relatedNodes: [Node]
        subNodes: [Node]
        aboveNodes: [Node]

        state: stateEnum
        


        match_v2_update: match_v2_updateType
        match_v2: [match_v2Type]


        registeredAt: String,

        selected: Boolean

    }

    type match_v2_updateType {
        member: Boolean
        projectRole: Boolean
    }

    type match_v2Type {
        serverID: [ID]
        nodeResID: ID
        type: typeEnumMP
        wh_sum: Float
        numPath: Float
        wh_k: Float,
        k_sum: Float,
        wh_k_arr: [wh_k_arrType],
        conn_node_wh: [conn_node_whType],
    }

    type conn_node_whType {
        nodeConnID: String, 
        wh_sum: Float,
        numPath: Float, 
    }

    type wh_k_arrType {
        wh_sum: Float
        numPath: Float
    }

    enum typeEnumMP {
        Member
        ProjectRole
    }



    type pathType {
        hop: Float,
        weight: Float,
    }



    enum stateEnum {
        waiting
        rejected
        approved
    }

    input relatedNodeInput {
        _id: ID
        relatedNode_id: ID
    }

    input relatedNode_nameInput {
        name: String
        relatedNode_name: String
        weight: String
        connection: String
    }

    input createNodeInput {
        node: String,

        name: String,


        subNodes: [ID],
        aboveNodes: [ID],

        state: stateEnum
    }

    input findNodeInput {
        _id: ID
    }

    input findNodesInput {
        _id: [ID]
        node: String
        recalculate_en: recalculateEnum
        show_match_v2: Boolean
        selectedNodes: [ID]
    }

    enum recalculateEnum {
        Member
        ProjectRole
        All
    }

`