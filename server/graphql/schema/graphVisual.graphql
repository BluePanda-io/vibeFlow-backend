module.exports = `
    
    type Graph {
        nodesVisual: [NodeVisual]
        edges: [Edge]
    }

    type NodeVisual {
        _id: ID
        fakeID: [ID]
        originalNode: ID
        name: String
        type: String
        avatar: String
        extraDistanceRation: Float

        style: StyleNodeOut
    }

    type StyleNodeOut {
        size: Int
        fill: String
        stroke: String
    }

    type Edge {
        source: ID
        target: ID
        type: String
        distanceRation: Float
        
        style: StyleEdgeOut
    }

    type StyleEdgeOut {
        edgeColor: String
        distance: Float
        strength: Float
    }

    

    input findMemberGraphInput {
        memberID: ID
        showAvatar: Boolean
        nodeSettings: [nodeSetting]
        edgeSettings: [edgeSetting]
    }

    input nodeSetting {
        type: String
        size: Int
        style: StyleIn
    }

    input StyleIn {
        fill: String
        stroke: String
    }

    input edgeSetting {
        nodeTypeSource: String
        nodeTypeTarget: String
        edgeColor: String
        distance: Float
        strength: Float
    }

    input findProjectGraphInput {
        projectID: ID
        showAvatar: Boolean
    }

    input findMemberToProjectGraphInput {
        memberID: ID
        projectID: ID
        showAvatar: Boolean
    }

    input findMemberToMemberGraphInput {
        memberOneID: ID
        memberTwoID: ID
        showAvatar: Boolean
    }

    input findMultipleMembersProjectsGraphInput {
        membersID: [ID]
        projectsID: [ID]
        showAvatar: Boolean
    }

    input findOneMemberToMembersGraphInput {
        memberID: ID
        showAvatar: Boolean
    }

    
`